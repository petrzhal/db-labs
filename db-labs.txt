
	Система управления проектами

Функциональные требования:
 - Авторизация пользователей
 - Управление пользователями (CRUD)
 - Система ролей для пользователей
 - Создание и управление проектами
 - Назначение задач сотрудникам
 - Отслеживание статусов и прогресса выполнения задач
 - Комментирование задач
 - Хранение информации о пользователях и их профилях
 - Журналирование действий пользователей

1. User (Пользователь)
 Хранит информацию о пользователях системы
 - id (PK) serial - Уникальный идентификатор пользователя
 - username character varying(255) not null - Имя пользователя
 - email character varying(255) not null - Почта пользователя
 - password character varying(255) not null - Пароль пользователя
 - role_id (FK) integer - Связь с сущностью Role. Роль пользователя в системе
Связь один ко многим с сущностями Role, TaskAssignment, Comment, Log.
Связь многие ко многим с сущностью Task.
Связь один к одному с сущностью Profile.

2. Profile (Профиль)
 Хранит дополнительную информацию о пользователе
 - id (PK, FK) integer - Уникальный идентификатор профиля. Внешний ключ для сущности User
 - phone character varying(255) - Номер телефона пользователя
 - address character varying(255) - Адрес пользователя
 - birthday date - Дата рождения пользователя
Связь один к одному с сущностью User.

3. Role (Роль)
 Определяет роли пользователей (админ, менеджер, сотрудник...)
 - id (PK) serial - Уникальный идентификатор роли
 - name character varying(255) noy null - Название роли
Связь один ко многим с сущностью User.

4. Project (Проект)
 Хранит информацию о проектах, управляемых в системе
 - id (PK) serial - Уникальный идентификатор проекта
 - name character varying(255) not null - Название проекта
 - description text - Описание проекта
 - start_date date not null - Дата начала проекта
 - end_date - Дата окончания проекта
 - status_id (FK) integer - Связь с сущностью Status. Текущий статус проекта
Связь один ко многим с сущностями Task, Status.

5. Task (Задача)
 Хранит информацию о задачах, связанных с проектом
 - id (PK) serial - Уникальный идентификатор задачи
 - name character varying(255) not null - Название задачи
 - description text - Описание задачи
 - project_id (FK) integer - Связь с сущностью Project. Проект, к которому относится задача
 - priority_id (FK) integer - Связь с сущностью Priority. Приоритет задачи
 - status_id (FK) integer - Связь с сущностью Status. Текущий статус задачи
 - due_date date - Срок выполнения задачи
Связь один ко многим с сущностями Project, Priority, Status, TaskAssignment, Comment, File.

6. TaskAssignment (Назначение задачи)
 Отображает назначение задачи пользователю
 - id (PK) serial - Уникальный идентификатор назначения задачи
 - task_id (FK) integer - Связь с сущностью Task. Задача, которую назначают
 - user_id (FK) integer - Связь с сущностью User. Пользователь, которому назначена задача
 - assigned_date date not null - Дата назначения задачи
Связь один ко многим с сущностями Task, User.

7. Status (Статус)
 Определяет статусы задач и проектов
 - id (PK) serial - Уникальный идентификатор статуса
 - name character varying(255) not null - Название статуса
Связь один ко многим с сущностями Task, Project.

8. Comment (Комментарий)
 Хранит комментарии к задачам
 - id (PK) serial - Уникальный идентификатор комментария
 - task_id (FK) integer - Связь с сущностью Task. Задача, к которой добавлен комментарий
 - user_id (FK) integer - Связь с сущностью User. Пользователь, оставивший комментарий
 - text text not null - текст комментария
 - timestamp timestamp with time zone not null - Время добавления комментария
Связь один ко многим с сущностями Task, User.

9. Log (Журнал)
 Хранит информацию о действиях пользователей в системе
 - id (Pk) serial - Уникальный идентификатор записи журнала
 - user_id (FK) integer - Связь с сущностью User. Пользователь, совершивший действие
 - action character varying(255) not null - Описание действия
 - timestamp timestamp with time zone not null - Время действия
Связь один ко многим с сущностью User.

10. File (Файл)
 Хранит информацию о файлах, прикрепленных к задачам
 - id (PK) serial - Уникальный идентификатор файла
 - task_id (FK) integer - Связь с сущностью Task. Задача, к которой прикреплен файл
 - file_name character varying(255) not null - Имя файла
 - file_path character varying(255) not null - Путь к файлу на сервере
 - uploaded_date date not null - Дата загрузки файла
Связь один ко многим с сущностью Task.

11. Priority (Приоритет)
 Определяет приоритеты задач
 - id (PK) serial - Уникальный идентификатор приоритета
 - name character varying(255) not null - Название приоритета
Связь один ко многим с сущностью Task.





